import org.gradle.api.Plugin
import org.gradle.api.Project
import org.gradle.api.DefaultTask
import org.gradle.api.tasks.TaskAction
import org.jetbrains.kotlin.gradle.plugin.KotlinSourceSet

class SourceInspectionTask extends DefaultTask {
    @TaskAction
    void inspectSources() {
        def kotlinExt = project.extensions.findByName("kotlin")
        if (kotlinExt != null) {
            def extClass = kotlinExt.getClass()
            def sourceSetsProp = extClass.metaClass.getMetaProperty("sourceSets")

            def sourceSets = sourceSetsProp?.getProperty(kotlinExt) as Iterable<KotlinSourceSet>

            sourceSets?.each { sourceSet ->
                logger.lifecycle("SourceSet: ${sourceSet.name}")
                sourceSet.kotlin.srcDirs.each { dir ->
                    logger.lifecycle("Kotlin src dir: $dir")
                }
            }
        } else {
            logger.warn("Kotlin extension not found.")
        }
    }
}

class KotlinProjectExtension implements Plugin<Project> {
    @Override
    void apply(Project project) {
        project.tasks.register("inspectSources", SourceInspectionTask) {
            group = "custom"
            description = "Inspects Kotlin source sets."
        }
    }
}